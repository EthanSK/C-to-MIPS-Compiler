#include "binary%s.hpp"

void Binary%s::printC(std::ostream &os) const
{%s
	os << getLeft();
	os << " %s ";
	os << getRight();%s
}

void Binary%s::generatePython(std::ostream &os, PythonContext &context, int scopeDepth) const
{%s
	getLeft()->generatePython(os, context, scopeDepth);
	os << " %s ";
	getRight()->generatePython(os, context, scopeDepth);%s
}

void Binary%s::generateIL(std::vector<ILinstr> &instrs, ILContext &context, std::string destReg) const
{
	std::string leftReg = context.makeName("%s_l");
	std::string rightReg = context.makeName("%s_r");
	getLeft()->generateIL(instrs, context, leftReg);
	getRight()->generateIL(instrs, context, rightReg);
	instrs.push_back(ILinstr("%s", destReg, leftReg, rightReg));
}